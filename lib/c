List<int> _rotateL() {
    switch (rotationState) {
      case 0:
        return [
          position[1] - rowLength,
          position[1],
          position[1] + rowLength,
          position[1] + rowLength + 1,
        ];
      case 1:
        return [
          position[1] - 1,
          position[1],
          position[1] + 1,
          position[1] + rowLength - 1,
        ];
      case 2:
        return [
          position[1] + rowLength,
          position[1],
          position[1] - rowLength,
          position[1] - rowLength - 1,
        ];
      case 3:
        return [
          position[1] - rowLength + 1,
          position[1],
          position[1] + 1,
          position[1] - 1,
        ];
      default:
        return position;
    }
  }

  List<int> _rotateJ() {
    switch (rotationState) {
      case 0:
        return [
          position[1] - rowLength,
          position[1],
          position[1] + rowLength,
          position[1] + rowLength - 1,
        ];
      case 1:
        return [
          position[1] - 1,
          position[1],
          position[1] + 1,
          position[1] - rowLength - 1,
        ];
      case 2:
        return [
          position[1] + rowLength,
          position[1],
          position[1] - rowLength,
          position[1] - rowLength + 1,
        ];
      case 3:
        return [
          position[1] + rowLength + 1,
          position[1],
          position[1] + 1,
          position[1] - 1,
        ];
      default:
        return position;
    }
  }